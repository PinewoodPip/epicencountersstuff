{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["projects","BuildPlanner","name","description","link","EpipEncounters","GearMods","AscensionTool","PipCommander","Header","props","className","src","Text","text","Project","data","onClick","window","location","href","TextLink","ProjectContainer","elements","project","push","style","App","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAAe,I,YCIXA,EAAW,CACbC,aAAc,CACZC,KAAM,gBACNC,YAAa,6HACbC,KAAM,8CAERC,eAAgB,CACdH,KAAM,kBACNC,YAAa,2KACbC,KAAM,wFAERE,SAAU,CACRJ,KAAM,sBACNC,YAAa,wJACbC,KAAM,0CAERG,cAAe,CACbL,KAAM,sBACNC,YAAa,iKACbC,KAAM,sCAERI,aAAc,CACZN,KAAM,qBACNC,YAAa,4IACbC,KAAM,2EAaV,SAASK,EAAOC,GACd,OACE,sBAAKC,UAAU,SAAf,UACE,qBAAKC,IAAI,mBAAmBD,UAAU,aACtC,cAACE,EAAD,CAAMC,KAAK,8BAA8BH,UAAU,UACnD,qBAAKC,IAAI,mBAAmBD,UAAU,uBAK5C,SAASI,EAAQL,GACf,IAAIM,EAAON,EAAMM,KAMjB,OAAO,sBAAKL,UAAU,UAAUM,QAJhC,WACEC,OAAOC,SAASC,KAAOJ,EAAKZ,MAGvB,UACL,cAACiB,EAAD,CAAUP,KAAME,EAAKd,KAAME,KAAMY,EAAKZ,KAAMO,UAAU,gCACtD,cAACE,EAAD,CAAMC,KAAME,EAAKb,YAAaQ,UAAU,2BAI5C,SAASW,EAAiBZ,GACxB,IAAIa,EAAW,GACf,IAAK,IAAIC,KAAWd,EAAMV,SACxBuB,EAASE,KAAK,cAACV,EAAD,CAAuBC,KAAMN,EAAMV,SAASwB,IAA9BA,IAG9B,OAAQ,qBAAKb,UAAU,oBAAf,SACLY,IAIE,SAASV,EAAKH,GACpB,OAAO,mBAAGgB,MAAOhB,EAAMgB,MAAOf,UAAW,QAAUD,EAAMC,UAAWM,QAASP,EAAMO,QAA5E,SAAsFP,EAAMI,OAG7F,SAASO,EAASX,GACxB,OAAO,mBAAGU,KAAMV,EAAMN,KAAMsB,MAAOhB,EAAMgB,MAAOf,UAAW,QAAUD,EAAMC,UAAWM,QAASP,EAAMO,QAA9F,SAAwGP,EAAMI,OAOvGa,M,4JAtDb,WACE,OAAQ,sBAAKhB,UAAU,mBAAf,UACN,cAACF,EAAD,IACA,cAACa,EAAD,CAAkBtB,SAAUA,W,GAJhB4B,IAAMC,WCpBTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.77720a15.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\n\nvar projects = {\n  BuildPlanner: {\n    name: \"Build Planner\",\n    description: \"A full-fledged build planner featuring accurate skill tooltips, Ascension browsing, active keyword listings and much more!\",\n    link: \"https://www.pinewood.team/ee2buildplanner/\",\n  },\n  EpipEncounters: {\n    name: \"Epip Encounters\",\n    description: \"An add-on mod that adds numerous fun new features, including socket forging, an option for enemies to spawn with Keywords & Artifacts, and UI improvements (soonâ„¢).\",\n    link: \"https://docs.google.com/document/d/10C39LndW8QwDcfA_bUpq_ZYu_6lt_vkjW7-sFeIuBKU/edit\",\n  },\n  GearMods: {\n    name: \"Gear Modifiers List\",\n    description: \"A list of all gear modifiers compatible with the Greatforge combine option. Also has a link to a more extensive spreadsheet with more technical data.\",\n    link: \"https://www.pinewood.team/ee2gearmods/\",\n  },\n  AscensionTool: {\n    name: \"Ascension Path Tool\",\n    description: \"A tool that finds the shortest paths towards your chosen Aspects. Can also search for the most point-efficient self-sustained builds, or maximize embodiments.\",\n    link: \"https://www.pinewood.team/ee2calc/\",\n  },\n  PipCommander: {\n    name: \"EE Cheat Commander\",\n    description: \"An edit of the Cheat Commander mod from Muffiny which adds Proteans, runes, an Ascension point cheat, and a few cheat spells for testing.\",\n    link: \"https://drive.google.com/file/d/1xMXnR_-PCscFj2IUm4DJu9drzJfu73m2/view\",\n  },\n}\n\nclass App extends React.Component {\n  render() {\n    return (<div className=\"App unselectable\">\n      <Header/>\n      <ProjectContainer projects={projects}/>\n    </div>)\n  }\n}\n\nfunction Header(props) {\n  return (\n    <div className=\"header\">\n      <img src=\"flourish_pip.png\" className=\"flourish\"/>\n      <Text text=\"Pip's Epic Encounters Stuff\" className=\"title\"/>\n      <img src=\"flourish_pip.png\" className=\"flourish flip-y\"/>\n    </div>\n  )\n}\n\nfunction Project(props) {\n  let data = props.data;\n\n  function SendToURL() {\n    window.location.href = data.link;\n  }\n\n  return <div className=\"project\" onClick={SendToURL}>\n    <TextLink text={data.name} link={data.link} className=\"project-header unselectable\"/>\n    <Text text={data.description} className=\"project-description\"/>\n  </div>\n}\n\nfunction ProjectContainer(props) {\n  let elements = []\n  for (let project in props.projects) {\n    elements.push(<Project key={project} data={props.projects[project]}/>)\n  }\n\n  return (<div className=\"project-container\">\n    {elements}\n  </div>)\n}\n\nexport function Text(props) {\n\treturn <p style={props.style} className={\"text \" + props.className} onClick={props.onClick}>{props.text}</p>\n}\n\nexport function TextLink(props) {\n\treturn <a href={props.link} style={props.style} className={\"text \" + props.className} onClick={props.onClick}>{props.text}</a>\n}\n\nexport function LinkText(props) {\n\treturn <a href={props.link} style={props.style} className={\"text \" + props.className} onClick={props.onClick}>{props.text}</a>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}